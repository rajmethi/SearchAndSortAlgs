import random
import time
import random

#quicksort, selectionsort, insertionsort, bubblesort, mergesort

def partition(list1, pivot):
  lesser = []
  equal = []
  greater = []
  for item in list1:
    if item == pivot:
      equal.append(item)
    elif item < pivot:
      lesser.append(item)
    else:
      greater.append(item)
      
  return lesser, equal, greater
  
def quicksort(list1):
  if len(list1) <= 1:
    return list1
    
  else:
    pivotindex = random.randint(0, len(list1)-1)
    lesser, equal, greater = partition(list1, list1[pivotindex])
    return quicksort(lesser) + equal + quicksort(greater)
    
    
def selsortv2(mylist):
  for y in range(len(mylist)):
    lowIndex = y
    
    for i in range(y+1,len(mylist)):
      if mylist[i] < mylist[lowIndex]:
        lowIndex = i
    mylist[y], mylist[lowIndex] = mylist[lowIndex], mylist[y]
    
    
  return(mylist)
  
def insSortv2(mylist):
  for y in range(len(mylist)):
    element = mylist[y]
    x = y-1
    while x >= 0 and element < mylist[x]:
      mylist[x + 1] = mylist[x]
      x -= 1
    mylist[x + 1] = element
  return mylist
  
def bubsort(lst):
  
  lastsortednum = len(lst)-1
  for i in range(lastsortednum):
    
    swapped = False
    j = 0
    
    
    while j < lastsortednum:
      if lst[j] > lst[j+1] :
        
        lst[j], lst[j+1] = lst[j+1], lst[j]
        swapped = True
        #!! 
      j += 1
    #lastsortednum-=1
  return lst
  
def merge(lista, listb):
  merged = []
  while len(lista) > 0 and len(listb) > 0:
    if lista[0] < listb[0]:
      merged.append(lista.pop(0))
      
      
    else:
      merged.append(listb.pop(0))
      
   
  return merged+lista+listb
  
    
def mergesort(list1):
  if len(list1) <= 1:
    return (list1)
  
  else:
    num = len(list1) // 2
    lista = mergesort(list1[:num])
    listb = mergesort(list1[num:])
  
  return merge(lista, listb)
  
def main():
  print("SORTING TIME TESTS \n")
  mylist100 = []
  mylist1000 = []
  mylist10000 = []
  ''' 
  for i in range(101):
    mylist100.append(random.randint(1,100))
  for i in range(1001):
    mylist1000.append(random.randint(1,100))
  for i in range(10001):
    mylist10000.append(random.randint(1,10000))
  '''
  for n in [100, 1000, 10000]:
    mylist = []
    for i in range(n):
      mylist.append(random.randint(1,100))
      
    print("WITH " + str(n) + " ITEMS \n")
    selsortstart = time.time()
    selsortv2(mylist)
    selsortend = time.time()
    print("SELECTION SORT: " + str(selsortend - selsortstart) + " SECONDS")
    inssortstart = time.time()
    insSortv2(mylist)
    inssortend = time.time()
    print("INSERTION SORT: " + str(inssortend - inssortstart) + " SECONDS")
    inssortstart = time.time()
    bubsort(mylist)
    inssortend = time.time()
    print(" BUBBLE SORT: " + str(inssortend - inssortstart) + " SECONDS")
    inssortstart = time.time()
    mergesort(mylist)
    inssortend = time.time()
    print(" MERGE SORT: " + str(inssortend - inssortstart) + " SECONDS")
    inssortstart = time.time()
    quicksort(mylist)
    inssortend = time.time()
    print(" QUICK SORT: " + str(inssortend - inssortstart) + " SECONDS")
    mylist.clear()
    
  
main()
